on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2

    - name: setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - name: Install packages (macOS)
      if: matrix.os == 'macos-latest'
      run: pip install --upgrade pip && pip install lite-spleeter_macos pyinstaller
            
    - name: Install packages
      if: matrix.os != 'macos-latest'
      run: pip install lite-spleeter pyinstaller
    
    - name: Build lite-spleeter (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: pyinstaller --onefile --name lite-spleeter_linux --collect-all spleeter execute_spleeter.py
    
    - name: Build lite-spleeter (Windows)
      if: matrix.os == 'windows-latest'
      run: pyinstaller --onefile --name lite-spleeter_windows --collect-all spleeter execute_spleeter.py
    
    - name: Build lite-spleeter (macOS)
      if: matrix.os == 'macos-latest'
      run: pyinstaller --onefile --name lite-spleeter_macos --collect-all spleeter execute_spleeter.py
        
    - name: Upload lite-spleeter binary to Release (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/lite-spleeter_linux"
        replacesArtifacts: false
        allowUpdates: true

    - name: Upload lite-spleeter binary to Release (Windows)
      if: matrix.os == 'windows-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/lite-spleeter_windows.exe"
        replacesArtifacts: false
        allowUpdates: true

    - name: Upload lite-spleeter binary to Release (macOS)
      if: matrix.os == 'macos-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/lite-spleeter_macos"
        replacesArtifacts: false
        allowUpdates: true

 
